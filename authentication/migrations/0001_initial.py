# Generated by Django 5.2.5 on 2025-08-25 09:18

import authentication.managers
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import location_field.models.plain
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("name", models.CharField(max_length=30, verbose_name="Name")),
                (
                    "phone",
                    models.CharField(max_length=20, unique=True, verbose_name="Phone"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="user/images/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("CU", "Customer"),
                            ("PR", "Provider"),
                            ("AD", "Admin"),
                        ],
                        max_length=2,
                        verbose_name="Role",
                    ),
                ),
                (
                    "location",
                    location_field.models.plain.PlainLocationField(
                        blank=True, max_length=63, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "location2_lat",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Location2 Latitude"
                    ),
                ),
                (
                    "location2_lng",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Location2 Longitude"
                    ),
                ),
                (
                    "average_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        verbose_name="Average Rating",
                    ),
                ),
                (
                    "fcm_registration_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="FCM Registration ID",
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        blank=True,
                        choices=[("android", "Android"), ("ios", "iOS")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Is Active"),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
            managers=[
                ("objects", authentication.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CarAgency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Model"
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Brand"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Color"
                    ),
                ),
                (
                    "price_per_hour",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Price per Hour"
                    ),
                ),
                (
                    "available",
                    models.BooleanField(default=False, verbose_name="Available"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="car_agency/images/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=50, unique=True, verbose_name="Code"),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Discount Percentage",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Coupon",
                "verbose_name_plural": "Coupons",
            },
        ),
        migrations.CreateModel(
            name="DriverCar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=20, verbose_name="Type")),
                ("model", models.CharField(max_length=20, verbose_name="Model")),
                ("number", models.CharField(max_length=20, verbose_name="Number")),
                ("color", models.CharField(max_length=20, verbose_name="Color")),
            ],
            options={
                "verbose_name": "Driver Car",
                "verbose_name_plural": "Driver Cars",
            },
        ),
        migrations.CreateModel(
            name="DriverProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "license",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="License"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("available", "Available"), ("in_ride", "In Ride")],
                        default="available",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Is Verified"),
                ),
                (
                    "documents",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="driver/documents/",
                        verbose_name="Documents",
                    ),
                ),
            ],
            options={
                "verbose_name": "Driver Profile",
                "verbose_name_plural": "Driver Profiles",
            },
        ),
        migrations.CreateModel(
            name="NameOfCar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=20, unique=True, verbose_name="Name"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
            ],
            options={
                "verbose_name": "Name Of Car",
                "verbose_name_plural": "Names Of Cars",
            },
        ),
        migrations.CreateModel(
            name="PlatformSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform_name",
                    models.CharField(default="Riders Admin", max_length=255),
                ),
                (
                    "platform_logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="dashboard_logos/"
                    ),
                ),
            ],
            options={
                "verbose_name": "Platform Settings",
                "verbose_name_plural": "Platform Settings",
            },
        ),
        migrations.CreateModel(
            name="PricingZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Zone Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "boundaries",
                    models.JSONField(
                        help_text="Array of coordinate points defining the zone",
                        verbose_name="Zone Boundaries",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
            ],
            options={
                "verbose_name": "Pricing Zone",
                "verbose_name_plural": "Pricing Zones",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "display_price",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Price"
                    ),
                ),
                ("stock", models.PositiveIntegerField(default=0, verbose_name="Stock")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=20, unique=True, verbose_name="Name"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created At"
                    ),
                ),
            ],
            options={
                "verbose_name": "Service",
                "verbose_name_plural": "Services",
            },
        ),
        migrations.CreateModel(
            name="WhatsAppAPISettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "instance_id",
                    models.CharField(max_length=100, verbose_name="Instance ID"),
                ),
                ("token", models.CharField(max_length=255, verbose_name="Token")),
            ],
            options={
                "verbose_name": "WhatsApp API Settings",
                "verbose_name_plural": "WhatsApp API Settings",
            },
        ),
        migrations.CreateModel(
            name="CarAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(verbose_name="Available From")),
                ("end_time", models.DateTimeField(verbose_name="Available Until")),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability_slots",
                        to="authentication.caragency",
                        verbose_name="Car",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("in_ride", models.BooleanField(default=False, verbose_name="In Ride")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
            },
        ),
        migrations.CreateModel(
            name="CarRental",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_datetime", models.DateTimeField(verbose_name="Rental Start")),
                ("end_datetime", models.DateTimeField(verbose_name="Rental End")),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Total Price",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rentals",
                        to="authentication.caragency",
                        verbose_name="Car",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="car_rentals",
                        to="authentication.customer",
                        verbose_name="Customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Rental",
                "verbose_name_plural": "Car Rentals",
            },
        ),
        migrations.CreateModel(
            name="CustomerPlace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location",
                    location_field.models.plain.PlainLocationField(
                        max_length=63, verbose_name="Location"
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="places",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Place",
                "verbose_name_plural": "Customer Places",
            },
        ),
        migrations.CreateModel(
            name="DriverCarImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to="car/images/", verbose_name="Image"),
                ),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="authentication.drivercar",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="drivercar",
            name="driver_profile",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="car",
                to="authentication.driverprofile",
                verbose_name="Driver Profile",
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("ride_request", "Ride Request"),
                            ("ride_accepted", "Ride Accepted"),
                            ("ride_status", "Ride Status Update"),
                            ("car_rental", "Car Rental Update"),
                            ("product_order", "Product Order Update"),
                            ("general", "General Notification"),
                        ],
                        default="general",
                        max_length=20,
                        verbose_name="Notification Type",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Additional Data"
                    ),
                ),
                ("is_read", models.BooleanField(default=False, verbose_name="Is Read")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="product_images/", verbose_name="Image"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="authentication.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
            },
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sub_service",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Sub Service"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Is Verified"),
                ),
                ("in_ride", models.BooleanField(default=False, verbose_name="In Ride")),
                (
                    "onLine",
                    models.BooleanField(
                        blank=True, default=True, null=True, verbose_name="On Line"
                    ),
                ),
                (
                    "name_of_car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="authentication.nameofcar",
                        verbose_name="Name Of Car",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "services",
                    models.ManyToManyField(
                        to="authentication.service", verbose_name="Services"
                    ),
                ),
            ],
            options={
                "verbose_name": "Provider",
                "verbose_name_plural": "Providers",
            },
        ),
        migrations.AddField(
            model_name="product",
            name="provider",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="authentication.provider",
                verbose_name="Provider",
            ),
        ),
        migrations.AddField(
            model_name="driverprofile",
            name="provider",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="driver_profile",
                to="authentication.provider",
                verbose_name="Provider",
            ),
        ),
        migrations.AddField(
            model_name="caragency",
            name="provider",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="car_agencies",
                to="authentication.provider",
                verbose_name="Provider",
            ),
        ),
        migrations.CreateModel(
            name="Purchase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "money_spent",
                    models.PositiveIntegerField(default=0, verbose_name="Money Spent"),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="Quantity"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchases",
                        to="authentication.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchases",
                        to="authentication.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase",
                "verbose_name_plural": "Purchases",
            },
        ),
        migrations.CreateModel(
            name="RideStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("starting", "Starting"),
                            ("arriving", "Arriving"),
                            ("finished", "Finished"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "pickup_lat",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Pickup Latitude"
                    ),
                ),
                (
                    "pickup_lng",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Pickup Longitude"
                    ),
                ),
                (
                    "drop_lat",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Drop Latitude"
                    ),
                ),
                (
                    "drop_lng",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Drop Longitude"
                    ),
                ),
                (
                    "total_price",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Total Price"
                    ),
                ),
                (
                    "distance_km",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Distance (km)"
                    ),
                ),
                (
                    "duration_minutes",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Duration (minutes)"
                    ),
                ),
                (
                    "total_price_before_discount",
                    models.FloatField(
                        blank=True,
                        help_text="Total price before applying any discounts or coupons",
                        null=True,
                        verbose_name="Total Price Before Discount",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rides_as_client",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Client",
                    ),
                ),
                (
                    "name_of_car_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentication.nameofcar",
                        verbose_name="Name of Car",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rides_as_provider",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Provider",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentication.service",
                        verbose_name="Service",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "driver_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Driver Rating",
                    ),
                ),
                (
                    "customer_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Customer Rating",
                    ),
                ),
                (
                    "driver_comment",
                    models.TextField(blank=True, verbose_name="Driver Comment"),
                ),
                (
                    "customer_comment",
                    models.TextField(blank=True, verbose_name="Customer Comment"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "ride",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rating",
                        to="authentication.ridestatus",
                        verbose_name="Ride",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating",
                "verbose_name_plural": "Ratings",
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "issued_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Issued At"
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Total Amount"
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="Tax"
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Discount",
                    ),
                ),
                (
                    "final_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Final Amount"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("paid", "Paid"),
                            ("unpaid", "Unpaid"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="unpaid",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "ride",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoice",
                        to="authentication.ridestatus",
                        verbose_name="Ride",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "ordering": ["-issued_at"],
            },
        ),
        migrations.CreateModel(
            name="ServiceImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="service/images/", verbose_name="Image"
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="authentication.service",
                        verbose_name="Service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Image",
                "verbose_name_plural": "Service Images",
            },
        ),
        migrations.CreateModel(
            name="UserOtp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.CharField(max_length=20, verbose_name="OTP")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User OTP",
                "verbose_name_plural": "User OTPs",
            },
        ),
        migrations.CreateModel(
            name="UserPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "points",
                    models.PositiveIntegerField(default=0, verbose_name="Points"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Points",
                "verbose_name_plural": "User Points",
            },
        ),
        migrations.CreateModel(
            name="ProviderServicePricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sub_service",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Sub Service"
                    ),
                ),
                (
                    "platform_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Fixed fee charged by the platform",
                        max_digits=10,
                        verbose_name="Platform Fee",
                    ),
                ),
                (
                    "service_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Additional service fee",
                        max_digits=10,
                        verbose_name="Service Fee",
                    ),
                ),
                (
                    "booking_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="One-time booking fee",
                        max_digits=10,
                        verbose_name="Booking Fee",
                    ),
                ),
                (
                    "base_fare",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Fixed starting price",
                        max_digits=10,
                        verbose_name="Base Fare",
                    ),
                ),
                (
                    "price_per_km",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Price per KM",
                    ),
                ),
                (
                    "price_per_minute",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Price per Minute",
                    ),
                ),
                (
                    "minimum_fare",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Minimum total price for the ride",
                        max_digits=10,
                        verbose_name="Minimum Fare",
                    ),
                ),
                (
                    "peak_hour_multiplier",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        help_text="Multiplier for peak hours (e.g., 1.5 for 50% increase)",
                        max_digits=4,
                        verbose_name="Peak Hour Multiplier",
                    ),
                ),
                (
                    "peak_hours_start",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Peak Hours Start"
                    ),
                ),
                (
                    "peak_hours_end",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Peak Hours End"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "zone",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pricings",
                        to="authentication.pricingzone",
                        verbose_name="Pricing Zone",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_pricings",
                        to="authentication.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Provider Service Pricing",
                "verbose_name_plural": "Provider Service Pricings",
                "unique_together": {("service", "sub_service", "zone")},
            },
        ),
    ]
